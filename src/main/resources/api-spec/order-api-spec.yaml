openapi: 3.0.0
info:
  title: Order API
  description: API for managing orders
  version: 1.0.0

paths:
  /api/v1/orders:
    get:
      summary: Get all orders
      tags:
        - Orders
      responses:
        '200':
          description: List of all orders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderListDto'
    post:
      summary: Create a new order
      tags:
        - Orders
      requestBody:
        description: Order data to create a new order
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDto'
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderEntry'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Order conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/orders/{id}:
    get:
      summary: Get order by ID
      tags:
        - Orders
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the order to retrieve
      responses:
        '200':
          description: Order found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderEntry'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update an existing order
      tags:
        - Orders
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the order to update
      requestBody:
        description: Order data to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDto'
      responses:
        '201':
          description: Order updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderEntry'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Order conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete an order by ID
      tags:
        - Orders
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the order to delete
      responses:
        '204':
          description: Order deleted successfully

components:
  schemas:
    OrderEntry:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the order
        customerName:
          type: string
          maxLength: 100
          description: Name of the customer
        date:
          type: string
          format: date-time
          description: Date and time when the order was created
        status:
          type: string
          maxLength: 100
          description: Status of the order
        items:
          type: object
          additionalProperties:
            type: integer
          description: Map of product IDs to quantities

    OrderListDto:
      type: object
      properties:
        orderEntries:
          type: array
          items:
            $ref: '#/components/schemas/OrderEntry'

    OrderDto:
      type: object
      properties:
        customerName:
          type: string
          maxLength: 100
          description: Name of the customer
        status:
          type: string
          maxLength: 100
          description: Status of the order
        items:
          type: object
          additionalProperties:
            type: integer
          description: Map of product IDs to quantities

    ErrorResponse:
      type: object
      properties:
        status:
          type: integer
          description: HTTP status code
        error:
          type: string
          description: Error type or message
        message:
          type: string
          description: Detailed error message
        path:
          type: string
          description: Request path where the error occurred
